import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
class S implements WidgetsLocalizations {
  const S();

  static S current;

  static const GeneratedLocalizationsDelegate delegate =
    GeneratedLocalizationsDelegate();

  static S of(BuildContext context) => Localizations.of<S>(context, S);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  String get Clean => "Clear history";
  String get Hyperion => "Hyperion";
  String get Insufficient_balance_hint => "Insufficient balance available for collateral";
  String get Next => "Next";
  String get Tips => "Tips";
  String get about_us => "About Us";
  String get accept_share_pub_key => "p2p sharing";
  String get account_backup_next_step_notice => "Next, you will see 12 recovery words in an order that allow you to recover your account";
  String get account_backup_notice => "Back up your account now";
  String get account_error => "Account Error";
  String get account_is_empty => "Account is empty";
  String get account_new_password => "New password";
  String get account_password => "account password";
  String get action_success_hint => "Successful operation";
  String get add_share_options => "Sharing options";
  String get address_copied => "Address copied";
  String get address_copy_success_hint => "Address replication successful";
  String get all => "ALL";
  String get already_latest_version_hint => "Already the latest version";
  String get amount => "Amount：";
  String get amount_copy_success_hint => "Amount copied successfully";
  String get app_name => "Star Rich";
  String get app_version => "Version";
  String get area => "Area";
  String get article => "Article";
  String get attraction => "Travel";
  String get audio => "Audio";
  String get background_scan => "Background scan";
  String get backup_finish => "Backup Finished";
  String get backup_notice_label => "Backup Tips";
  String get backup_offline_save_text => "Keep it in a safe place offline\nDo not share or store mnemonics online, such as emails, photo albums, social applications, etc.";
  String get backup_offline_save_title => "Offline storage";
  String get backup_option => "Backup Options";
  String get backup_wallet_mnemonic_text => "Use paper and pen to copy mnemonics correctly\nIf your phone is lost, stolen or damaged, use mnemonics to recover your assets";
  String get backup_wallet_mnemonic_title => "Backup mnemonics";
  String get backup_wallet_notice_text1 => "Obtaining mnemonic words proves your ownership of wallet assets";
  String get balance_lack => "Insufficient balance";
  String get balance_with_unit => "Balance(USDT)";
  String get bank => "Bank";
  String get becharge_amount => "Becharge";
  String get bill_flow => "Bills";
  String get by_hyn => "Using HYN";
  String get by_hyn_transfer => "Transfer using HYN wallet";
  String get by_mortgage => "Alternative mortgage";
  String get cancel => "Cancel";
  String get check_update => "Check for updates";
  String get clean_search_history => "Clear History";
  String get click_charge => "Click to recharge";
  String get click_retry_hint => "Click to retry";
  String get close => "Close";
  String get coming_soon => "Coming Soon";
  String get commiting => "Commiting";
  String get confirm => "Confirm";
  String get confirm_mnemonic => "Confirm Mnemonic";
  String get confirm_mnemonic_incorrect => "Your mnemonic is incorrect, please try again";
  String get confirm_mnemonic_tips => "Click on the words to put them in the correct order";
  String get confirm_mortgage => "Confirm mortgage";
  String get confirm_password_label => "Confirm new password";
  String get confirm_snap_up => "Confirm";
  String get contact_customer_service => "Contact Customer Service";
  String get continue_text => "Continue";
  String get contract_call => "Call Smart contract";
  String get copy => "Copy";
  String get copy_wx_id_success_hint => "Copying WeChat success";
  String get copyed => "Copied";
  String get create => "Create";
  String get create_wallet => "Create Wallet";
  String get create_wallet_name_label => "Wallet Name";
  String get create_wallet_password_label => "Wallet Password";
  String get create_wallet_tips => "Create a private account";
  String get cybersquatting => "Squat";
  String get cycling => "Cycling";
  String get dapp_setting => "DApp Settings";
  String get data_contribute => "Data Contribution";
  String get data_contribute_reward => "Contribute map data to earn HYN rewards";
  String get data_exception_hint => "Data is abnormal, please try again";
  String get decrypt_location_cipher_tips => "How to decipher coded location information？";
  String get decrypt_location_cipher_tips_context => "Please paste the location code, and click enter to decode.";
  String get delete => "Delete";
  String get delete_wallet_fail => "Delete Failed";
  String get delete_wallet_success => "Deleted Successfully";
  String get department => "Department";
  String get direct_star_numbers => "Direct";
  String get discount_map => "Discount Map";
  String get discover => "Discover";
  String get dmap_document_title => "DMap Integration Document";
  String get dmap_life => "Explore nearby";
  String get dmap_setting => "DMap Setting";
  String get dmap_tools => "Tools";
  String get document_optimization => "optimizing document...";
  String get domestic_video => "Domestic";
  String get downloading_update_file => "Downloading update file";
  String get driving => "Driving";
  String get earnings_balance => "Earnings\nBalance";
  String get email_format_error_hint => "Email format is wrong, please enter the correct email";
  String get email_label => "Email";
  String get embassy_guide => "Embassy Guide";
  String get encrypt_error => "encryption denied";
  String get enter => "Enter";
  String get eth_balance_not_enough_for_gas_fee => "ETH balance is insufficient to pay network fees";
  String get extract_mnemonic_fail => "Mnemonic extraction failed";
  String get fail_get_user_recharge_address_hint => "Failed to get user recharge address";
  String get finish => "Finish";
  String get foods => "Foods";
  String get foreign_video => "Foreign";
  String get forget_password => "forget password";
  String get forum => "Forum";
  String get free_receive => "Free Receive";
  String get fund_password => "Fund password";
  String get fund_password_format_error_message => "The fund password format is incorrect. Please enter at least 6 characters";
  String get fund_password_length_error_message => "Please enter a fund password of at least 6 character";
  String get fundz_password => "fund password";
  String get gas_fee => "Transaction Fee";
  String get gas_station => "Gas Station";
  String get generating_key => "generating encrypted addr.…";
  String get get_power => "Get Power";
  String get get_powers => "Get Powers";
  String get global_embassies => "Global Embassies";
  String get global_map_server_nodes => "Global Map Service Nodes";
  String get global_nodes => "Global Nodes";
  String get home_page => "Home";
  String get hot_area => "Hot spots";
  String get hotel => "Hotel";
  String get hyn_market => "HYN Market";
  String get hyn_price => "HYN Price";
  String get hyn_wallet_open_hint => "HYN wallet is about to open";
  String get illegal_mnemonic => "illegal mnemonic";
  String get import => "Import";
  String get import_account => "Import Account";
  String get import_account_fail => "Import Failed";
  String get import_account_success => "The account was successfully imported ";
  String get import_account_tips => "Congratulations, your private wallet has been successfully imported";
  String get import_wallet => "Import Wallet";
  String get improvement_plan_agree => "Yes";
  String get improvement_plan_message => "Tell us your suggestions about Titan by joining our user experience plan. Check for more details.\n        <b>\n            <a href=\"https://www.hyn.space/titan/privacy_policy/\">Titan Privacy Policy</a>\n        </b>";
  String get improvement_plan_refuse => "No";
  String get improvement_plan_title => "Titan improvement plan";
  String get income_amount => "Income";
  String get information => "News";
  String get information_guide => "Guidance";
  String get information_video => "Video";
  String get input_confirm_wallet_password_hint => "Please re-enter a wallet password of at least 6 characters";
  String get input_corrent_count_hint => "Please enter the correct amount";
  String get input_count_over_balance => "Exceed balance limit";
  String get input_password_again_hint => "Please re-enter the password";
  String get input_resume_mnemonic => "Enter backup mnemonics separated by spaces";
  String get input_search_keyworod_or_cipher => "Enter search keyword/ciphertext";
  String get input_wallet_name_hint => "Please input wallet name";
  String get input_wallet_name_length_hint => "Name must be within 6 characters";
  String get input_wallet_password_length_hint => "Wallet password must be at least 6 characters";
  String get install_now => "Install now";
  String get installation_update_package_failed => "Installation update package failed";
  String get internet_bar => "Internet Cafe";
  String get introduce => "Introduce";
  String get invitate_qr => "Invite QR";
  String get invitation_code => "invitation code";
  String get invite_join => "Invite you to join";
  String get invite_link => "Invitation link";
  String get invite_link_copy_hint => "Invitation link copied";
  String get invite_share => "Invite and share";
  String get kais_talk => "Kai's Talk";
  String get key_manager_title => "My encrypted addr.";
  String get label => "Label";
  String get later => "Later";
  String get latest_news => "Article";
  String get less_than_1_min => "Less than 1 minute";
  String get load_fail_click_hint => "Loading failed, click to retry";
  String get login => "Login";
  String get logining => "Logining";
  String get lossz_wallet_mnemonic_notice => "I understand that if I lose the recovery word, I will not be able to access my wallet";
  String get main_my_public_key => "My encrypted key(public key)";
  String get mall => "Mall";
  String get manually_refresh => "Refresh Manually";
  String get map3_global_nodes => "Map3 Global Nodes";
  String get map3_node_introduction => "Mp3 Node";
  String get map_ai_verificate => "Map AI verification";
  String get map_dmap => "Map DMap";
  String get max_star_numbers => "Maximum";
  String get medium => "Medium";
  String get modify_success => "Successfully modified";
  String get more_dmap => "Stay tuned for more DMap applications";
  String get mortgage => "Mortgage";
  String get mortgage_fail_hint => "Mortgage Failure";
  String get mortgage_success_hint => "Mortgage success";
  String get my_account_with_unit => "Account(USDT)";
  String get my_location => "My Location";
  String get my_page => "My";
  String get my_position => "My Location";
  String get my_power_with_unit => "Power(T)";
  String get nav_about_us => "About us";
  String get nav_my_privacy_map => "My Privacy Map";
  String get nav_share_app => "Share Titan APP";
  String get navigation => "Start";
  String get need_transfer => "Need Transfer";
  String get network_exception_hint => "Network anomaly~";
  String get new_update_available => "Latest Update Available";
  String get next => "continue";
  String get nightlife_guide => "Nightlife Guidance";
  String get no_data => "No Data";
  String get no_detail_address => "No detailed address";
  String get no_fill_in => "Not Filled";
  String get no_invite_success_hint => "You haven't successfully invited people~";
  String get no_level => "No Level";
  String get no_recommended_route => "No recommended route yet";
  String get no_transfer_info_hint => "No transfer information found, please try again later";
  String get no_wallet_hint => "You don't have a wallet yet.";
  String get node_has_squat_hint => "Node has been squatted out";
  String get node_introduction => "Node introduction";
  String get node_martgage => "Node Martgage";
  String get node_mortgage => "Node Mortgage";
  String get node_mortgage_in_out_hint => "Node mortgages, go in and out, unlimited time。";
  String get node_mortgage_with_unit => "Mortgage(USDT)";
  String get not_open_yet => "Coming Soon";
  String get official_announcement => "Announcement";
  String get official_website => "Official Website";
  String get online_exchange => "Online Exchanges";
  String get open_camera => "Please allow access to your camera";
  String get operating_hours => "Time";
  String get other_star_numbers => "Other";
  String get out_wallet_transfer_hint => "I have transferred using an external wallet";
  String get over_limit_amount_hint => "Reached the limit";
  String get over_limit_numbers => "Excess Quantity";
  String get paking => "Parking";
  String get password_format_error_message => "The password format is incorrect. Please enter at least 6 characters";
  String get password_incorrect => "incorrect password";
  String get password_label => "Password";
  String get password_length_error_message => "Please enter a password of at least 6 character";
  String get password_not_equal_hint => "Inconsistent passwords";
  String get paste => "paste";
  String get pay_fail_hint => "Payment failed";
  String get pay_success_hint => "payment successful";
  String get please_input_email_hint => "please input your email";
  String get please_input_fund_pwd_hint => "Please enter the fund password";
  String get please_input_invitation_code => "Please enter 6 characters invitation code";
  String get please_input_mnemonic => "Please enter mnemonic";
  String get please_input_password_hint => "Please enter the password";
  String get please_input_verification_code => "Please enter 6 digit verification code";
  String get please_input_wallet_name => "Please input wallet name";
  String get please_input_wallet_password_hint => "Please enter wallet password";
  String get please_mortgage => "Mortgage";
  String get please_waiting => "Please Wait";
  String get police_security_station => "Police Station";
  String get police_station_text => "Check nearby police stations";
  String get postscript => "Notes";
  String get postscript_hint => "within 50 characters";
  String get power_martgage => "Powers Martgage";
  String get private_and_safety => "Private and Secure";
  String get private_service => "Privacy Services";
  String get private_share => "Private location Share";
  String get private_sharing => "Private Location Share";
  String get private_sharing_text => "Share encrypted location information to protect privacy";
  String get private_wallet_tips => "Private key never leaves your device";
  String get processing => "processing";
  String get product => "Product：";
  String get project_introduction => "Project Brief";
  String get public_key_copied => "Public key. copied";
  String get public_key_scan_fail_rescan => "public key error, please re-scan";
  String get receive_success_hint => "Receive Success";
  String get received => "Received";
  String get receiver => "Receive";
  String get receiver_address => "Receiver Address";
  String get receiver_address_not_empty_hint => "Receiver address is empty";
  String get receiver_encrypted_address => "receiver encrypted address(public key)";
  String get recharge => "Recharge";
  String get recharge_balance => "Recharge\nBalance";
  String get recharge_success_hint => "Recharge successful";
  String get recommended_area => "Recommended Areas";
  String get refresh_keypaire_message => "Refreshing your public key address will fail to decrypt the received address, still continue to refresh?";
  String get refresh_public_key_days_tips => "Automatically refresh in %d days";
  String get refresh_public_key_hours_tips => "Automatically refresh in %d hrs %d mins";
  String get refresh_public_key_minutes_tips => "Automatically refresh in %d mins";
  String get refresh_public_key_seconds_tips => "Automatically refresh in %d secs";
  String get register => "register";
  String get register_account => "register";
  String get register_email => "register email";
  String get register_success => "registration success";
  String get reinput_wallet_password_label => "Confirm Wallet Password";
  String get remark => "Notes";
  String get reset_account_password => "Reset account password";
  String get rmb => "CNY";
  String get route => "Route";
  String get safety_verification => "Safety Verification";
  String get safety_verify => "Safety verification";
  String get save_mnemonic_notice => "Write down or copy these words in the correct order and keep them safe.";
  String get save_mnemonic_safe_notice => "Never share the mnemonic with anyone, store your backup securely!";
  String get search_empty_data => "No Data";
  String get search_history => "History";
  String get search_or_decode => "Search / Decrypt";
  String get search_title => "Search / Decrypt";
  String get send => "Send";
  String get send_verification_code => "Send";
  String get sent => "Sent";
  String get service_area => "Area";
  String get service_description => "Description";
  String get service_hours => "Time";
  String get services => "Services";
  String get share => "Share";
  String get share_app => "Share App";
  String get share_encrypted_location => "Share encrypted location";
  String get share_fail => "Error occurred";
  String get share_invalid_public_key => "Invalid public key";
  String get share_location => "Share Location";
  String get share_qrcode => "Share public key QR Code";
  String get show_mnemonic_label => "Show Mnemonic Phrases";
  String get skip => "Skip";
  String get snap_up => "Snap Up";
  String get snap_up_fail => "Snap up failure";
  String get snap_up_success_hint => "Snap up success";
  String get speed_fast => "Fast";
  String get speed_normal => "Normal";
  String get speed_slow => "Slow";
  String get star_number => "Stars";
  String get start_encryption => "Encrypt";
  String get stay_tuned => "Stay tuned";
  String get submit => "submit";
  String get supermarket => "Supermarket";
  String get sweep_qr_hint => "Sweep the QR code pattern above, add me on WeChat";
  String get task => "Task";
  String get task_finish_day_hint => "Task completed for the day";
  String get task_record => "Task Record";
  String get telegram => "Telegram";
  String get telegram_operator => "Telegram Operator";
  String get telphone => "Phone No.";
  String get thank_you_for_contribute_data => "Thank you for your contribution。";
  String get the_horizon_hint => "—— This is the horizon ——";
  String get time => "Opening times";
  String get time_f => "time:";
  String get tip_node_mortgages_balances_hint => "Tip: node mortgages can only be used with earnings balances";
  String get tip_snap_up_balance_hint => "Tip: The cybersquatting node can only use the recharge balance for collateral";
  String get tips => "Tips";
  String get titan_encrypted_map_ecology => "Titan Cryptographic Map Ecology";
  String get toilet => "Toilet";
  String get transfer_address => "Transfer address";
  String get transfer_exception_hint => "Transfer exception";
  String get transfer_fail => "Transfer failed";
  String get transfer_hyn_hint => "Be sure to transfer the specified HYN amount！";
  String get transfer_submitted => "The transfer has been submitted";
  String get transfer_warning_hint => "Do not transfer non-HYN assets to the above address, otherwise the assets will not be recovered. After you transfer in, you need to confirm the entire network node, which takes about 10-30 minutes";
  String get turn_on_wifi_hint => "Turn on WiFi to scan more accurate signal maps";
  String get twitterhyperion => "Twitter-Hyperion";
  String get twittertitan => "Twitter-Titan";
  String get unknown_error => "Unknown error";
  String get update_now => "Update Now";
  String get use_guide => "Use Tutorial";
  String get user_this_account => "Use this private account";
  String get verification_code => "Verification code";
  String get video => "Video";
  String get view_all => "View All";
  String get walking => "Walking";
  String get wallet => "Wallet";
  String get wallet_create_success => "Account has been created successfully";
  String get wallet_create_success_tips => "Congratulations, your private account has been created successfully";
  String get wallet_manage => "Manage Wallet";
  String get wallet_name => "Wallet Name";
  String get wallet_name_label => "Wallet Name";
  String get wallet_password_error => "incorrect password";
  String get wallet_password_label => "Wallet password";
  String get wallet_setting => "Wallet Settings";
  String get wallet_setting_backup_notice => "If you cannot access this device, your funds will not be recovered unless you back it up!";
  String get wechat => "Wechat";
  String get wechat_cs => "Wechat Operator";
  String get wechat_official_account => "Wechat Official Account";
  String get withdrawal => "Withdrawal";
  String get withdrawal_records => "Withdrawal";
  String get wx_id => "WeChat ID：titan654321";
  String get your_mnemonic => "Your Mnemonic phrases";
  String all_powers_func(String totalPower) => "Total Power：${totalPower}";
  String available_balance_usdt(String amount) => "Available Balance ${amount} USDT";
  String available_mortgage_numbers(String number) => "mort：${number}";
  String by_recommend(String getParentEmail) => "Recommended by ${getParentEmail}";
  String current_exchange_rate(String to, String currency) => "Current ${to} Exchange ${currency} Rate:";
  String current_rate_func(String currency, String quotes, String rate) => "current ${currency} exchange ${quotes} rate is: 1${rate}";
  String distance(String distance) => "$distance m";
  String get_verification_code_again(String countdownTime) => "Reacquire ${countdownTime}";
  String income_func(String incomeCycle) => "${incomeCycle} day income";
  String km(String km) => "$km km ";
  String max_range_func(String maxMeter) => "Maximum range：${maxMeter} m";
  String mortgage_product_func(String name) => "Mortgage products：${name}";
  String my_symbol_address(String symbol) => "My ${symbol} Address:";
  String n_day(String day) => "$day day ";
  String n_days_product(String days) => "${days} days to produce";
  String n_hour(String hour) => "$hour hour ";
  String n_minute(String minute) => "$minute minute ";
  String network_request_err(String code) => "Network request error, code: $code";
  String poundage_with_quantity(String poundage) => "Fee：${poundage}";
  String private_share_receive_address(String shortAddress) => "Receive Address : ${shortAddress}";
  String receiver_symbol(String symbol) => "Receive ${symbol}";
  String send_count_label(String symbol) => "$symbol Quantity";
  String send_symbol(String symbol) => "Send $symbol";
  String snap_up_product_fuc(String name) => "Snap Up Products：${name}";
  String stay_func(String snapUpStocks) => " stay ${snapUpStocks}";
  String task_finish_func(String total) => "Already done the task ${total} time";
  String withdrawal_with_quantity(String count) => "Withdrawal：${count}";
}

class $ko extends S {
  const $ko();

  @override
  TextDirection get textDirection => TextDirection.ltr;

}

class $en extends S {
  const $en();
}

class $zh_CN extends S {
  const $zh_CN();

  @override
  TextDirection get textDirection => TextDirection.ltr;

}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<S> {
  const GeneratedLocalizationsDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("ko", ""),
      Locale("en", ""),
      Locale("zh", "CN"),
    ];
  }

  LocaleListResolutionCallback listResolution({Locale fallback, bool withCountry = true}) {
    return (List<Locale> locales, Iterable<Locale> supported) {
      if (locales == null || locales.isEmpty) {
        return fallback ?? supported.first;
      } else {
        return _resolve(locales.first, fallback, supported, withCountry);
      }
    };
  }

  LocaleResolutionCallback resolution({Locale fallback, bool withCountry = true}) {
    return (Locale locale, Iterable<Locale> supported) {
      return _resolve(locale, fallback, supported, withCountry);
    };
  }

  @override
  Future<S> load(Locale locale) {
    final String lang = getLang(locale);
    if (lang != null) {
      switch (lang) {
        case "ko":
          S.current = const $ko();
          return SynchronousFuture<S>(S.current);
        case "en":
          S.current = const $en();
          return SynchronousFuture<S>(S.current);
        case "zh_CN":
          S.current = const $zh_CN();
          return SynchronousFuture<S>(S.current);
        default:
          // NO-OP.
      }
    }
    S.current = const S();
    return SynchronousFuture<S>(S.current);
  }

  @override
  bool isSupported(Locale locale) => _isSupported(locale, true);

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => false;

  ///
  /// Internal method to resolve a locale from a list of locales.
  ///
  Locale _resolve(Locale locale, Locale fallback, Iterable<Locale> supported, bool withCountry) {
    if (locale == null || !_isSupported(locale, withCountry)) {
      return fallback ?? supported.first;
    }

    final Locale languageLocale = Locale(locale.languageCode, "");
    if (supported.contains(locale)) {
      return locale;
    } else if (supported.contains(languageLocale)) {
      return languageLocale;
    } else {
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    }
  }

  ///
  /// Returns true if the specified locale is supported, false otherwise.
  ///
  bool _isSupported(Locale locale, bool withCountry) {
    if (locale != null) {
      for (Locale supportedLocale in supportedLocales) {
        // Language must always match both locales.
        if (supportedLocale.languageCode != locale.languageCode) {
          continue;
        }

        // If country code matches, return this locale.
        if (supportedLocale.countryCode == locale.countryCode) {
          return true;
        }

        // If no country requirement is requested, check if this locale has no country.
        if (true != withCountry && (supportedLocale.countryCode == null || supportedLocale.countryCode.isEmpty)) {
          return true;
        }
      }
    }
    return false;
  }
}

String getLang(Locale l) => l == null
  ? null
  : l.countryCode != null && l.countryCode.isEmpty
    ? l.languageCode
    : l.toString();
